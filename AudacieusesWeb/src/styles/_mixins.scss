@use 'variables' as *;

// Mixins pour les cartes et conteneurs
@mixin card-styles {
  background-color: white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-soft;
  overflow: hidden;
  transition: $transition-base;
  
  &:hover {
    box-shadow: $shadow-medium;
  }
}

@mixin panel-styles {
  background-color: $background-primary;
  border-radius: $border-radius;
  padding: $spacing-lg;
  margin-bottom: $spacing-lg;
}

// Mixins pour le texte
@mixin heading-1 {
  font-size: $font-size-h1;
  font-weight: $font-weight-bold;
  line-height: 1.3;
  color: $text-primary;
  margin-bottom: $spacing-lg;
}

@mixin heading-2 {
  font-size: $font-size-h2;
  font-weight: $font-weight-semibold;
  line-height: 1.3;
  color: $text-primary;
  margin-bottom: $spacing-md;
}

@mixin heading-3 {
  font-size: $font-size-h3;
  font-weight: $font-weight-semibold;
  line-height: 1.4;
  color: $text-primary;
  margin-bottom: $spacing-md;
}

@mixin heading-4 {
  font-size: $font-size-h4;
  font-weight: $font-weight-medium;
  line-height: 1.4;
  color: $text-primary;
  margin-bottom: $spacing-sm;
}

@mixin section-title {
  font-size: 1.5rem;
  font-weight: $font-weight-semibold;
  line-height: 1.3;
  color: $text-primary;
  margin-bottom: $spacing-md;
  position: relative;
  padding-bottom: $spacing-sm;
  
  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 60px;
    height: 3px;
    background-color: $color-primary;
    border-radius: 2px;
  }
}

@mixin body-text {
  font-size: $font-size-base;
  font-weight: $font-weight-normal;
  line-height: 1.6;
  color: $text-secondary;
}

@mixin text-small {
  font-size: $font-size-sm;
  font-weight: $font-weight-normal;
  line-height: 1.5;
  color: $text-secondary;
}

// Mixins pour les boutons
@mixin button-base {
  display: inline-block;
  font-weight: $font-weight-medium;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  border: 1px solid transparent;
  padding: 0.75rem 1.5rem;
  font-size: $font-size-base;
  border-radius: $border-radius;
  transition: $transition-base;
  
  &:disabled {
    opacity: 0.65;
    pointer-events: none;
  }
}

@mixin button-primary {
  @include button-base;
  background-color: $color-primary;
  color: white;
  
  &:hover {
    background-color: darken($color-primary, 10%);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba-color($color-primary-rgb, 0.25);
  }
  
  &:focus {
    box-shadow: 0 0 0 0.25rem rgba-color($color-primary-rgb, 0.25);
  }
  
  &:active {
    background-color: darken($color-primary, 15%);
    transform: translateY(0);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: white;
  color: $color-primary;
  border: 1px solid $color-primary;
  
  &:hover {
    background-color: rgba-color($color-primary-rgb, 0.05);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  &:focus {
    box-shadow: 0 0 0 0.25rem rgba-color($color-primary-rgb, 0.15);
  }
  
  &:active {
    background-color: rgba-color($color-primary-rgb, 0.1);
    transform: translateY(0);
  }
}

@mixin button-tertiary {
  background: none;
  border: none;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  color: $text-secondary;
  cursor: pointer;
  transition: all 0.2s ease;
  border-radius: $border-radius;
  
  &:hover {
    color: $color-primary;
    background-color: rgba-color($color-primary-rgb, 0.05);
  }
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 0.25rem rgba-color($color-primary-rgb, 0.15);
  }
}

@mixin button-outline {
  @include button-base;
  background-color: transparent;
  color: $color-primary;
  border: 1px solid $color-primary;
  
  &:hover {
    background-color: rgba-color($color-primary-rgb, 0.05);
    border-color: darken($color-primary, 10%);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
}

@mixin button-success {
  @include button-base;
  background-color: $color-success;
  color: white;
  
  &:hover {    background-color: darken($color-success, 10%);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba-color($color-success-rgb, 0.25);
  }
}

@mixin button-danger {
  @include button-base;
  background-color: $color-danger;
  color: white;
  
  &:hover {    background-color: darken($color-danger, 10%);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba-color($color-danger-rgb, 0.25);
  }
}

// Mixins pour les utilitaires de mise en page
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-row {
  display: flex;
  flex-direction: row;
}

// Mixins pour les formulaires
@mixin form-control {
  display: block;
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: $font-size-base;
  font-weight: $font-weight-normal;
  line-height: 1.5;
  color: $text-primary;
  background-color: $background-primary;
  border: 1px solid $background-tertiary;
  border-radius: $border-radius;
  transition: $transition-base;
  
  &:focus {
    border-color: lighten($color-primary, 25%);
    outline: 0;
    box-shadow: 0 0 0 0.25rem rgba-color($color-primary-rgb, 0.15);
  }
  
  &::placeholder {
    color: $text-hint;
    opacity: 1;
  }
  
  &:disabled {
    background-color: $background-secondary;
    opacity: 0.65;
  }
}

@mixin form-label {
  margin-bottom: $spacing-sm;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  color: $text-primary;
  display: block;
}

@mixin form-group {
  margin-bottom: $spacing-lg;
}

// Mixins pour responsive design
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: ($breakpoint-sm - 0.02)) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) and (max-width: ($breakpoint-md - 0.02)) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) and (max-width: ($breakpoint-lg - 0.02)) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) and (max-width: ($breakpoint-xl - 0.02)) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  }
}

@mixin respond-from($breakpoint) {
  @if $breakpoint == xs {
    @content;
  } @else if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  }
}

@mixin respond-to-max($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: ($breakpoint-sm - 0.02)) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (max-width: ($breakpoint-md - 0.02)) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: ($breakpoint-lg - 0.02)) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: ($breakpoint-xl - 0.02)) {
      @content;
    }
  }
}
