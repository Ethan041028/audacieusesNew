@echo off
REM Script de migration de MySQL vers PostgreSQL pour Les Audacieuses (Windows)
REM √Ä ex√©cuter depuis le r√©pertoire racine du projet

echo ===================================================
echo   Migration de MySQL vers PostgreSQL pour Render
echo ===================================================
echo.

REM V√©rifier si nous sommes dans le bon r√©pertoire
if not exist "AudacieusesAPI" (
  echo ERROR: Ce script doit √™tre ex√©cut√© depuis le r√©pertoire racine du projet Les Audacieuses.
  exit /b 1
)

REM √âtape 1: Installer les d√©pendances PostgreSQL
echo √âtape 1: Installation des d√©pendances PostgreSQL...
cd AudacieusesAPI
call npm install pg pg-hstore --save
echo ‚úÖ D√©pendances PostgreSQL install√©es avec succ√®s.
echo.

REM √âtape 2: Adapter les mod√®les pour PostgreSQL
echo √âtape 2: Adaptation des mod√®les Sequelize pour PostgreSQL...
call npm run adapt-models
echo ‚úÖ Mod√®les adapt√©s pour PostgreSQL.
echo.

REM √âtape 3: Adapter les requ√™tes SQL
echo √âtape 3: Adaptation des requ√™tes SQL pour PostgreSQL...
call npm run adapt-queries
echo ‚úÖ Requ√™tes SQL adapt√©es pour PostgreSQL.
echo.

REM √âtape 4: Demander les informations de connexion aux bases de donn√©es
echo √âtape 4: Configuration des connexions aux bases de donn√©es...
echo.
echo Entrez les informations de connexion √† votre base de donn√©es MySQL source:
set /p MYSQL_HOST="H√¥te MySQL (d√©faut: localhost): "
if "%MYSQL_HOST%"=="" set MYSQL_HOST=localhost
set /p MYSQL_USER="Utilisateur MySQL (d√©faut: root): "
if "%MYSQL_USER%"=="" set MYSQL_USER=root
set /p MYSQL_PASSWORD="Mot de passe MySQL: "
set /p MYSQL_DATABASE="Nom de la base de donn√©es MySQL (d√©faut: audacieuses_db): "
if "%MYSQL_DATABASE%"=="" set MYSQL_DATABASE=audacieuses_db

echo.
echo Entrez les informations de connexion √† votre base de donn√©es PostgreSQL cible:
set /p PG_HOST="H√¥te PostgreSQL (d√©faut: localhost): "
if "%PG_HOST%"=="" set PG_HOST=localhost
set /p PG_PORT="Port PostgreSQL (d√©faut: 5432): "
if "%PG_PORT%"=="" set PG_PORT=5432
set /p PG_USER="Utilisateur PostgreSQL (d√©faut: postgres): "
if "%PG_USER%"=="" set PG_USER=postgres
set /p PG_PASSWORD="Mot de passe PostgreSQL: "
set /p PG_DATABASE="Nom de la base de donn√©es PostgreSQL (d√©faut: audacieuses_db): "
if "%PG_DATABASE%"=="" set PG_DATABASE=audacieuses_db

REM Cr√©er le fichier .env avec les informations de connexion
echo # Configuration g√©n√©r√©e par le script de migration > .env
echo NODE_ENV=development >> .env
echo PORT=3000 >> .env
echo JWT_SECRET=audacieuses-secret-key >> .env
echo. >> .env
echo # Configuration MySQL (source) >> .env
echo MYSQL_HOST=%MYSQL_HOST% >> .env
echo MYSQL_USER=%MYSQL_USER% >> .env
echo MYSQL_PASSWORD=%MYSQL_PASSWORD% >> .env
echo MYSQL_DATABASE=%MYSQL_DATABASE% >> .env
echo. >> .env
echo # Configuration PostgreSQL (cible) >> .env
echo PG_HOST=%PG_HOST% >> .env
echo PG_PORT=%PG_PORT% >> .env
echo PG_USER=%PG_USER% >> .env
echo PG_PASSWORD=%PG_PASSWORD% >> .env
echo PG_DATABASE=%PG_DATABASE% >> .env
echo. >> .env
echo # Configuration active (PostgreSQL) >> .env
echo DB_HOST=%PG_HOST% >> .env
echo DB_USER=%PG_USER% >> .env
echo DB_PASSWORD=%PG_PASSWORD% >> .env
echo DB_NAME=%PG_DATABASE% >> .env

echo ‚úÖ Fichier .env cr√©√© avec succ√®s.
echo.

REM √âtape 5: V√©rifier si PostgreSQL est install√© et disponible
echo √âtape 5: Pr√©paration de la base de donn√©es PostgreSQL...
where psql >nul 2>&1
if %ERRORLEVEL% NEQ 0 (
  echo ‚ö†Ô∏è PostgreSQL (psql) n'est pas trouv√© dans le PATH.
  echo Vous devrez cr√©er la base de donn√©es manuellement.
) else (
  REM Cr√©er la base de donn√©es PostgreSQL
  echo Cr√©ation de la base de donn√©es PostgreSQL %PG_DATABASE%...
  set PGPASSWORD=%PG_PASSWORD%
  psql -h %PG_HOST% -p %PG_PORT% -U %PG_USER% -d postgres -c "CREATE DATABASE %PG_DATABASE% WITH ENCODING='UTF8';"
  if %ERRORLEVEL% NEQ 0 (
    echo ‚ö†Ô∏è La base de donn√©es existe peut-√™tre d√©j√† ou il y a eu une erreur.
  ) else (
    echo ‚úÖ Base de donn√©es PostgreSQL cr√©√©e avec succ√®s.
  )
  
  REM Initialiser la structure de la base de donn√©es PostgreSQL
  echo √âtape 6: Initialisation de la structure PostgreSQL...
  psql -h %PG_HOST% -p %PG_PORT% -U %PG_USER% -d %PG_DATABASE% -f src/config/init-postgres-database.sql
  if %ERRORLEVEL% NEQ 0 (
    echo ‚ö†Ô∏è Erreur lors de l'initialisation de la structure PostgreSQL.
  ) else (
    echo ‚úÖ Structure PostgreSQL initialis√©e avec succ√®s.
  )
)
echo.

REM √âtape 7: Migration des donn√©es
echo √âtape 7: Migration des donn√©es de MySQL vers PostgreSQL...
call npm run migrate-to-postgres
echo ‚úÖ Migration des donn√©es termin√©e.
echo.

REM √âtape 8: Mise √† jour du fichier render.yaml
echo √âtape 8: V√©rification du fichier render.yaml...
cd ..
if exist "render.yaml" (
  REM Sauvegarder l'original
  copy render.yaml render.yaml.mysql.bak
  
  REM Utiliser PowerShell pour remplacer MySQL par PostgreSQL car cmd n'a pas de sed
  powershell -Command "(Get-Content render.yaml) | ForEach-Object { $_ -replace 'type: mysql', 'type: postgres' } | Set-Content render.yaml"
  echo ‚úÖ Fichier render.yaml mis √† jour pour utiliser PostgreSQL.
) else (
  echo ‚ö†Ô∏è Le fichier render.yaml n'a pas √©t√© trouv√©. Vous devrez le configurer manuellement.
)
echo.

REM √âtape 9: Derni√®res instructions
echo ===================================================
echo   Migration termin√©e avec succ√®s!
echo ===================================================
echo.
echo Pour d√©ployer sur Render:
echo.
echo 1. Assurez-vous que votre code est commit√© sur un d√©p√¥t Git.
echo 2. Connectez-vous √† Render et cr√©ez un nouveau Blueprint.
echo 3. Connectez votre d√©p√¥t Git.
echo 4. Render d√©tectera le fichier render.yaml et configurera les services.
echo.
echo Documentation compl√®te dans le fichier MYSQL_TO_POSTGRES_MIGRATION.md
echo et RENDER_POSTGRES_DEPLOYMENT.md
echo.
echo Bon d√©ploiement! üöÄ

pause
